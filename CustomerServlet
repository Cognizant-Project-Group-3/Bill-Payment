package com.billpayment.controller;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.billpayment.BO.CustomerBO;
import com.billpayment.entity.Customer;
import com.billpayment.exception.DatabaseException;

/**
 * Servlet implementation class CustomerServlet
 */
public class CustomerServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public CustomerServlet() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		HttpSession session = request.getSession();
		if (session.getAttribute("username") == null) {
			response.sendRedirect("index_pro.html");
		}

		response.setContentType("text/html");
		PrintWriter out = response.getWriter();

		// Getting the entries of customer register form
		String name;
		String contactNo;
		String address;
		String email;
		String cardNo;
		String vendorType;
		String vendorName;
		String documentName;
		String countryName;
		String stateName;
		String documentNo;

		name = request.getParameter("name");
		contactNo = request.getParameter("contact_no");
		address = request.getParameter("address");
		countryName = request.getParameter("country");
		stateName = request.getParameter("state");
		email = request.getParameter("email");
		documentName = request.getParameter("docname");
		documentNo = request.getParameter("document_detail_no");
		vendorType = request.getParameter("vendortype");
		vendorName = request.getParameter("vendorname");
		cardNo = request.getParameter("card_no");

		// Creating a customer object using values fetched above
		final Customer customer = new Customer(name, contactNo, address,
				documentNo, email, cardNo, vendorType, vendorName,
				documentName, countryName, stateName);

		final CustomerBO customerBO = new CustomerBO();
		int status = 0;

		try {
			customerBO.calculatedocumentNO(customer);

			// Calling the insert method in customerBO
			status = customerBO.insert(customer);

			// if insert is successful customer id will be returned as status
			// else 0
			if (status != 0) {
				/*out.print("<a href='homepage.html'>Home</a><br><br>");
				out.print("Customer Record was inserted successfully<br>");
				out.print("Your Details are:<br>");*/
				CustomerBO custBO = new CustomerBO();
				Customer cust = new Customer();
				cust = custBO.fetchCustomerDetails(status);

				request.setAttribute("id", cust.getCustid());
				request.setAttribute("name", cust.getName());
				request.setAttribute("phone", cust.getContactNo());
				request.setAttribute("add", cust.getAddress());
				request.setAttribute("country", cust.getCountryName());
				request.setAttribute("state", cust.getStateName());
				request.setAttribute("email", cust.getEmail());
				request.setAttribute("card", cust.getCardNo());

				if (!response.isCommitted()) {
				RequestDispatcher requestDispatcher = request
						.getRequestDispatcher("/CustomerDetailsDisplay_pro.jsp");
				requestDispatcher.forward(request, response);
				}
				

				out.print("<a href='UpdateCustomer_pro.html'>Edit Details..</a>");
			} else {
				out.print("Customer Record was not inserted successfully<br>");
				out.print("<a href='RegisterCustomer_pro.html'>Try Again</a>");
			}

		} catch (DatabaseException e) {
			// TODO: handle exception
			Throwable throwable = e.getThrowable();
			RequestDispatcher reqDispatchError = request
					.getRequestDispatcher("/error.jsp");
			if (throwable instanceof ClassNotFoundException) {
				request.setAttribute("message", "Jar file for Oracle is absent");
			} else if (throwable instanceof SQLException) {
				request.setAttribute("message", "Exception related to database");
			}
			if (!response.isCommitted()) {
				reqDispatchError.forward(request, response);
				return;
			}

		}
	}
}
