package com.billpayment.controller;

import java.io.IOException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.billpayment.BO.AdminBO;
import com.billpayment.exception.DatabaseException;

/**
 * Servlet implementation class AdminServlet
 */
public class AdminServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#HttpServlet()
	 */
	public AdminServlet() {
		super();
		// TODO Auto-generated constructor stub
	}

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doGet(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doPost(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request,
			HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub

		String username = request.getParameter("username");
		String password = request.getParameter("password");

		HttpSession session = request.getSession();
		session.setAttribute("username", username);

		response.setHeader("Cache-Control", "no-cache");
		response.setHeader("Cache-Control", "no-store");
		response.setDateHeader("Expires", 0);
		response.setHeader("Pragma", "no-cache");

		// Code to encrypt password
		String generatedPassword = null;
		try {
			// Create MessageDigest instance for MD5
			MessageDigest md = MessageDigest.getInstance("MD5");
			// Add password bytes to digest
			md.update(password.getBytes());
			// Get the hash's bytes
			byte[] bytes = md.digest();
			// This bytes[] has bytes in decimal format;
			// Convert it to hexadecimal format
			StringBuilder sb = new StringBuilder();
			for (int i = 0; i < bytes.length; i++) {
				sb.append(Integer.toString((bytes[i] & 0xff) + 0x100, 16)
						.substring(1));
			}
			// Get complete hashed password in hex format
			generatedPassword = sb.toString();
		} catch (NoSuchAlgorithmException e) {
			e.printStackTrace();
		}

		// Code to verify admin userid and password
		AdminBO isadmin = new AdminBO();
		Boolean check = false;
		try {
			check = isadmin.verify(username, generatedPassword);
		} catch (DatabaseException e) {
			// TODO: handle exception
			Throwable throwable = e.getThrowable();
			RequestDispatcher reqDispatchError = request
					.getRequestDispatcher("/error.jsp");
			if (throwable instanceof ClassNotFoundException) {
				request.setAttribute("message", "Jar file for Oracle is absent");
			} else if (throwable instanceof SQLException) {
				request.setAttribute("message", "Exception related to database");
			}
			reqDispatchError.forward(request, response);
			return;
		}

		// If Admin
		if (check == true) {
			response.sendRedirect("homepage.html");
		}

		// If not Admin redirect to index page
		else {
			RequestDispatcher rd = request.getRequestDispatcher("index_pro.html");
			rd.forward(request, response);
		}
	}

}
